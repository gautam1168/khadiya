<?xml version="1.0" encoding="utf-8"?>


<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title type="text">Khadiya</title>
    <subtitle type="html">MemE is a powerful and highly customizable GoHugo theme for personal blogs.</subtitle>
    <updated>2020-05-06T21:53:25+05:30</updated>
    <id>https://gautam1168.com/</id>
    <link rel="alternate" type="text/html" href="https://gautam1168.com/" />
    <link rel="self" type="application/atom+xml" href="https://gautam1168.com/atom.xml" />
    <author>
            <name>Gaurav Gautam</name>
            <uri>https://gautam1168.com/</uri>
            
                <email>gautam1168@gmail.com</email>
            </author>
    <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights>
    <generator uri="https://gohugo.io/" version="0.69.2">Hugo</generator>
        <entry>
            <title type="text">Vue 3 &#43; Rollup</title>
            <link rel="alternate" type="text/html" href="https://gautam1168.com/posts/rollup-vue-3/" />
            <id>https://gautam1168.com/posts/rollup-vue-3/</id>
            <updated>2020-05-06T21:51:56+05:30</updated>
            <published>2020-05-06T20:56:14+05:30</published>
            <author>
                    <name>Gaurav Gautam</name>
                    <uri>https://gautam1168.com/</uri>
                    <email>gautam1168@gmail.com</email>
                    </author>
            <rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</rights><summary type="html"><![CDATA[I will setup a basic Vue 3 project with Rollup. The official vue-next repo gives a basic setup using Webpack.
Why ES Modules are not supported as an output format by Webpack. Rollup supports this format in addition to the standard umd and commonjs formats and seems to create smaller bundles than webpack.]]></summary>
            
                <content type="html"><![CDATA[<p>I will setup a basic Vue 3 project with Rollup. The official vue-next repo gives a basic setup using <a href="https://github.com/vuejs/vue-next-webpack-preview">Webpack</a>.</p>
<h2 id="why">Why</h2>
<p><em>ES Modules</em> are not supported as an output format by Webpack. Rollup supports this format in addition to the standard <em>umd</em> and <em>commonjs</em> formats and seems to create smaller bundles than webpack.</p>
<h2 id="tldr">TLDR;</h2>
<p>Get the setup for running a vue3 project with rollup as bundler from here.</p>
<h2 id="manual-setup">Manual Setup</h2>
<p>Follow these steps to setup a project named <code>test</code>. At the end your directory structure should look like this</p>
<pre><code>test
  |-- public
       |-- index.html
  |-- src
       |-- index.ts
       |-- App.vue
  |-- package.json
  |-- rollup.config.js
  |-- serve.js

</code></pre><ol>
<li>
<p>Create a directory for your project and run <code>npm init</code>.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">  mkdir <span class="nb">test</span>
  <span class="nb">cd</span> <span class="nb">test</span>
  npm init
</code></pre></div></li>
<li>
<p>Install the latest vue 3, rollup and some plugins for rollup from npm</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">  npm i --save vue@3.0.0-beta.2 rollup
  npm i --save-dev @rollup/plugin-node-resolve @vue/compiler-sfc rollup-plugin-alias rollup-plugin-commonjs rollup-plugin-vue
</code></pre></div></li>
<li>
<p>Create a index.html file</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">  mkdir public
  <span class="nb">cd</span> public 
  touch index.html
</code></pre></div><p>Add the following content to your <code>index.html</code>. Notice we will be using a es module so we put type as <code>module</code> in the script tag.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">  <span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>vue3 test<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;app&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">script</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;bundle.esm.js&#34;</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;module&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>Add a vue component to the project. First come back out of the public folder and create a src folder.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">  <span class="nb">cd</span> ..
  mkdir src
  <span class="nb">cd</span> src
</code></pre></div><p>Now, add a Vue component and an index file</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">  touch App.vue
  touch index.ts
</code></pre></div><p>Add the following content to the <code>App.vue</code> file</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-vue" data-lang="vue">  <span class="p">&lt;</span><span class="nt">template</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span><span class="nx">Hello</span> <span class="nx">merve</span><span class="o">!</span><span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">template</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">script</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;ts&#34;</span><span class="p">&gt;</span>
    <span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
      <span class="nx">setup</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">return</span> <span class="p">{}</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>Add the following content to the index.ts file created above</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-ts" data-lang="ts">  <span class="kr">import</span> <span class="p">{</span> <span class="nx">createApp</span> <span class="p">}</span> <span class="nx">from</span> <span class="s1">&#39;vue&#39;</span><span class="p">;</span>
  <span class="kr">import</span> <span class="nx">App</span> <span class="nx">from</span> <span class="s1">&#39;./App.vue&#39;</span><span class="p">;</span>

  <span class="nx">createApp</span><span class="p">(</span><span class="nx">App</span><span class="p">).</span><span class="nx">mount</span><span class="p">(</span><span class="s1">&#39;#app&#39;</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>Now that we have the code, lets add the rollup configuration that will compile it. Go back to the root directory and add a rollup.config.js file</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">  <span class="nb">cd</span> ..
  touch rollup.config.js
</code></pre></div><p>And add the following configuration to this file</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js">  <span class="kr">import</span> <span class="nx">alias</span> <span class="nx">from</span> <span class="s1">&#39;rollup-plugin-alias&#39;</span><span class="p">;</span>
  <span class="kr">import</span> <span class="nx">commonjs</span> <span class="nx">from</span> <span class="s1">&#39;rollup-plugin-commonjs&#39;</span> 
  <span class="kr">import</span> <span class="nx">VuePlugin</span> <span class="nx">from</span> <span class="s1">&#39;rollup-plugin-vue&#39;</span>

  <span class="kr">export</span> <span class="k">default</span> <span class="p">{</span>
    <span class="nx">input</span><span class="o">:</span> <span class="s2">&#34;src/index.ts&#34;</span><span class="p">,</span>
    <span class="nx">output</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">file</span><span class="o">:</span> <span class="s2">&#34;public/bundle.esm.js&#34;</span><span class="p">,</span>
      <span class="nx">format</span><span class="o">:</span> <span class="s2">&#34;es&#34;</span>
    <span class="p">},</span>
    <span class="nx">plugins</span><span class="o">:</span> <span class="p">[</span>
         
      <span class="nx">commonjs</span><span class="p">(),</span>
      <span class="nx">VuePlugin</span><span class="p">(),</span>
      <span class="nx">alias</span><span class="p">({</span>
        <span class="nx">resolve</span><span class="o">:</span> <span class="p">[</span> <span class="s1">&#39;.js&#39;</span><span class="p">,</span> <span class="s1">&#39;.ts&#39;</span> <span class="p">],</span>
        <span class="nx">entries</span><span class="o">:</span> <span class="p">[</span>
          <span class="p">{</span> <span class="nx">find</span><span class="o">:</span> <span class="s1">&#39;vue&#39;</span><span class="p">,</span> <span class="nx">replacement</span><span class="o">:</span> <span class="s1">&#39;node_modules/vue/dist/vue.runtime.esm-browser.js&#39;</span> <span class="p">}</span>
        <span class="p">]</span>
      <span class="p">})</span>
    <span class="p">],</span>
    <span class="nx">watch</span><span class="o">:</span> <span class="p">{</span>
      <span class="nx">include</span><span class="o">:</span> <span class="s1">&#39;src/**&#39;</span><span class="p">,</span>
      <span class="nx">exclude</span><span class="o">:</span> <span class="s1">&#39;node_modules/**&#39;</span>
    <span class="p">}</span>
  <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>At this point, you will be able to compile your code using rollup. But, since rollup doesn&rsquo;t have its own server or hot module replacement (yet), we should also add a server for development.</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">  npm i --save-dev live-server
  touch serve.js
</code></pre></div><p>Add the following content to serve.js</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js">  <span class="kr">const</span> <span class="nx">liveserver</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;live-server&#39;</span><span class="p">);</span>

  <span class="kr">const</span> <span class="nx">params</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nx">port</span><span class="o">:</span> <span class="mi">8080</span><span class="p">,</span>
    <span class="nx">host</span><span class="o">:</span> <span class="s1">&#39;0.0.0.0&#39;</span><span class="p">,</span>
    <span class="nx">root</span><span class="o">:</span> <span class="s1">&#39;public&#39;</span><span class="p">,</span>
    <span class="nx">open</span><span class="o">:</span> <span class="kc">false</span><span class="p">,</span>
    <span class="nx">logLevel</span><span class="o">:</span> <span class="mi">2</span><span class="p">,</span>
  <span class="p">};</span>

  <span class="nx">liveserver</span><span class="p">.</span><span class="nx">start</span><span class="p">(</span><span class="nx">params</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>Finally, lets add a script in our package.json so that we can easily start our server and compiler in watch mode. Add the following line to the scripts section of your package.json</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json">  <span class="p">{</span>
    <span class="nt">&#34;serve&#34;</span><span class="p">:</span> <span class="s2">&#34;rollup -c rollup.config.js --watch &amp; node serve.js&#34;</span>
  <span class="p">}</span><span class="err">,</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>And now just run the serve command and visit your browser on localhost to see the website</p>
<div class="highlight"><pre class="chroma"><code class="language-sh" data-lang="sh">  npm run serve
</code></pre></div></li>
</ol>
]]></content>
            
            
            
            
            
                
                    
                
                    
                
            
        </entry>
    
</feed>
